## 🌼🌼🌼建树🌼🌼🌼

# 需要软件trimal、macse、translatorx、samtools、seqkit、iqtree、mafft
# translatorx这个文件这个代码调整过，请替换

## 🌼🌼🌼单个基因建树🌼🌼🌼
conda activate trans_iqtree
translatorx -i COI.final.fa -o COI.transx -p F -c 2 # 按照编码的氨基酸进行序列比对
java -jar /data01/xush/0.software/macse_v2.07.jar -prog exportAlignment -align COI.transx.nt_ali.fasta -codonForInternalStop NNN -codonForFinalStop --- -gc_def 02 # 对终止密码子进行标注，后面是对生成的NT文件建立索引

samtools faidx COI.transx.nt_ali_NT.fasta # 对生成的fasta文件建立索引
# 分partition构建线粒体蛋白编码基因系统发生树
# 制作一个partition file，参考如下命令，将每个氨基酸的第1个碱基、第2个碱基、第3个碱基分成不同的partition
cat mito_gene_list | while read gene; do echo ${gene}; head -n 1 ${gene}.transx.nt_ali_NT.fasta.fai | awk '{print $2}'; done | paste - - | awk 'BEGIN{tot=0; line=0} {print "DNA, part"line*3+1" = "tot+1"-"tot+$2"\\3\n""DNA, part"line*3+2" = "tot+2"-"tot+$2"\\3\n""DNA, part"line*3+3" = "tot+3"-"tot+$2"\\3";tot=tot+$2;line+=1}' > partition.file

# 建树
iqtree -s COI.transx.nt_ali_NT.fasta --seed 6574744 -T 5 -m MFP+MERGE -B 1000 --prefix cdstest -p partition.file
# 得到的结果文件中.contree 和.treefile 文件下载下来，用FigTree软件/iTOL网站看


## 🌼🌼🌼13个编码基因建树🌼🌼🌼
先构建了一个13.gene.list，然后按照13个蛋白去提取序列
# 先读入 13.gene.list
GENES=$(cat 13.gene.list | tr -d '>') # 遍历每个_genes.fa文件
for file in *_genes.fa; do
    tag=$(basename "$file" _genes.fa) # 提取物种名作为标签
    out="${tag}_filtered_genes.fa"
    awk -v genes="$GENES" -v tag="$tag" '
        BEGIN{
            n=split(genes, arr, "\n")
            for(i=1; i<=n; i++) keep[arr[i]]=1
        }
        /^>/ {
            split($0, a, " ")
            gsub(/^>/, "", a[1])
            gene=a[1]
            if (keep[gene]) {
                print ">"gene"_"tag
                keep_seq=1
            } else {
                keep_seq=0
            }
            next
        }
        keep_seq { print }
    ' "$file" > "$out"
done  ## 得到的是注释了13个蛋白的filtered_genes.fa


# 提取所有COXIII的序列
gene="COXIII"
rm -f ${gene}_all.fa  # 防止追加污染

for file in *.fa; do
    awk -v g="^>"$gene"_" '
        $0 ~ g {p=1; print; next}   # 碰到目标标题，开启开关并打印
        /^>/ {p=0}                  # 遇到新标题，关闭开关
        p                           # 如果开关开启，打印行
    ' "$file" >> ${gene}_all.fa
done

cat mito_gene_list | while read gene; do \
  translatorx -i ${gene}.fa -o ${gene}.transx -p F -c 2; \
  java -jar /data01/xush/0.software/macse_v2.07.jar -prog exportAlignment -align ${gene}.transx.nt_ali.fasta -codonForInternalStop NNN -codonForFinalStop --- -gc_def 02; \
  trimal -in ${gene}.transx.nt_ali_NT.fasta -out ${gene}.transx.macse.trimal -automated1; \
  translatorx -i ${gene}.transx.macse.trimal -o ${gene}.transx.macse.trimal.transx.fasta -p F -c 2; \
  java -jar /data01/xush/0.software/macse_v2.07.jar -prog exportAlignment -align ${gene}.transx.macse.trimal.transx.fasta.nt_ali.fasta -codonForInternalStop NNN -codonForFinalStop --- -gc_def 02; \
done

# 注意对生成的比对文件进行检查，比如比对是否有异常，长度是否正常
# 此处需要修改文件里的ID名,将每个基因文件中的每个样本名改成一样的，后面才能串联到一起


#####
# 对生成的fasta文件建立索引
cat mito_gene_list| while read gene; do samtools faidx ${gene}.transx.macse.trimal.transx.fasta.nt_ali_NT.fasta; done

# mito_gene_list文件列出线粒体基因名
cat mito_gene_list| while read gene; do ls ${gene}.transx.macse.trimal.transx.fasta.nt_ali_NT.fasta; done > infile.list

# 将各个基因的alignment串联到一起
seqkit concat --infile-list infile.list --out-file concat.fasta

# 分partition构建线粒体蛋白编码基因系统发生树
# 制作一个partition file，参考如下命令，将每个氨基酸的第1个碱基、第2个碱基、第3个碱基分成不同的partition
cat mito_gene_list | while read gene; do echo ${gene}; head -n 1 ${gene}.transx.macse.trimal.transx.fasta.nt_ali_NT.fasta.fai | awk '{print $2}'; done | paste - - | awk 'BEGIN{tot=0; line=0} {print "DNA, part"line*3+1" = "tot+1"-"tot+$2"\\3\n""DNA, part"line*3+2" = "tot+2"-"tot+$2"\\3\n""DNA, part"line*3+3" = "tot+3"-"tot+$2"\\3";tot=tot+$2;line+=1}' > partition.file
# 建树
source activate iqtree
iqtree -s concat.fasta --seed 6574744 -T 5 -m MFP+MERGE -B 1000 --prefix cdstest -p partition.file

# 得到的结果文件中.contree 和.treefile 文件下载下来，用FigTree软件/iTOL网站看
